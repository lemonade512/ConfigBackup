# vim: foldmethod=marker:foldlevel=0

# Zipped Files {{{
function extract () {
    if [ -z "$1" ]; then
        # display usage if no parameters are given
        echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    else
        if [ -f $1 ]; then
            case $1 in
                *.tar.bz2)   tar xvjf $1     ;;
                *.tar.gz)    tar xvzf $1     ;;
                *.tar.xz)    tar xvJf $1     ;;
                *.lzma)      unlzma $1       ;;
                *.bz2)       bunzip2 $1      ;;
                *.rar)       unrar x -ad $1  ;;
                *.gz)        gunzip $1       ;;
                *.tar)       tar xvf $1      ;;
                *.tbz2)      tar xvjf $1     ;;
                *.tgz)       tar xvzf $1     ;;
                *.zip)       unzip $1        ;;
                *.Z)         uncompress $1   ;;
                *.7z)        7z x $1         ;;
                *.xz)        unxz $1         ;;
                *.exe)       cabextract $1   ;;
                *) echo "extract: '$1' - unknown archive method" ;;
            esac
        else
            echo "$1 -file does not exist"
        fi
    fi
}
# }}}

# Navigation {{{
function up() {
    local dir
    dir=""
    if [ -z "$1" ]; then
        dir=..
    elif [[ $1 =~ ^[0-9]+$ ]]; then
        x=0
        while [ $x -lt ${1:-1} ]; do
            dir=${dir}../
            x=$(($x+1))
        done
    else
        dir=${PWD%/$1/*}/$1
    fi
    cd "$dir" 2&> /dev/null || error_return "No such parent directory: $1"
}

function upstr() {
    local dir
    dir=$(up "$1" && pwd)
    if [[ $? > 0 ]]; then
        return 1
    fi
    echo "$dir"
}
# }}}

# Start/Stop VPN {{{

# TODO (phillip): Check your notes to see how you like to document bash
# functions.
#
# Uses `vpnc` command to setup your VPN. For now, this will just use a
# hardcoded config file. In the future, I may want to expand this to allow
# automatically editing files with something like `vpn create <name>`. Then
# you could start and stop with `vpn start <name>` and `vpn stop <name>`.
#
#   $1 - Command to perform. Currently accepts "start", "stop", "end", or null.
#       If no command is given, this will default to starting the hardcoded
#       VPN.
function vpn() {
    local cmd
    if [[ $# -gt 0 ]]; then
        case "$1" in
            "start") cmd="start" ;;
            "end") cmd="stop" ;;
            "stop") cmd="stop" ;;
            *) echo "Did not understand command '$1'"; return 1 ;;
        esac
    else
        cmd="start"
    fi

    if [ "$cmd" == "start" ]; then
        local config_file="$HOME/.config/vpnc/indeedvpn.conf"
        echo "You should get a notification on Duo to complete login"
        sudo vpnc $config_file
    elif [ "$cmd" == "stop" ]; then
        echo "Stopping VPN..."
        sudo vpnc-disconnect
    else
        echo "Did not understand command $cmd"
    fi
}
# }}}
